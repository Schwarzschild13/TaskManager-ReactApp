{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","id","console","log","status","name","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setStatus","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","stat","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56b49114.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n        <Button\r\n          color={showAdd ? 'red' : 'green'}\r\n          text={showAdd ? 'Close' : 'Add'}\r\n          onClick={onAdd}\r\n        />\r\n      \r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header","import { FaCheck, FaCircle, FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task`} \r\n      //  ${!task.reminder && \"reminder\"}\r\n      // `}\r\n      // onDoubleClick={() => onToggle(task.id)}\r\n      >\r\n      <h3>\r\n        <div onClick={()=> {onToggle(task.id); console.log(task.status);}}>  \r\n        {task.status == \"Not Completed\" ? (<FaCircle/>) : (<FaCheck/>)}\r\n        </div>\r\n        {task.name}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task, index) => (\r\n        <Task \r\n        key={index} \r\n        task={task} \r\n        onDelete={onDelete} \r\n        onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [name, setText] = useState('')\r\n  const [status, setStatus] = useState(\"Not Completed\")\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!name) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({ name, status })\r\n\r\n    setText('')\r\n    setStatus(\"Not Completed\")\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={name}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:6039//all\");\n    const data = await res.json();\n    console.log(res);\n    return data;\n  };\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:6039//all/${id}`);\n    const data = await res.json();\n    console.log(res);\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:6039/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    console.log(data)\n\n    setTasks([...tasks, data[0]]);\n  \n  };\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:6039/task/${id}`, {\n      method: \"DELETE\",\n    });\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert(\"Error Deleting This Task\");\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    console.log(taskToToggle[0].status);\n    console.log(!taskToToggle[0].status);\n    var stat = taskToToggle[0].status == \"Not Completed\" ? \"Completed\" : \"Not Completed\"\n    const updTask = { ...taskToToggle[0], status: stat};\n    \n    console.log(updTask);\n    console.log(JSON.stringify(updTask))\n    const res = await fetch(`http://localhost:6039/task/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    console.log(res.body)\n\n    const data = await res.json();\n    console.log(data)\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, status: data[0].status } : task\n      )\n    );\n  };\n\n  return (\n    \n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                \"No Tasks To Show\"\n              )}\n            </>\n      </div>\n    \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}